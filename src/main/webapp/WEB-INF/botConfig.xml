<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/util
            http://www.springframework.org/schema/util/spring-util.xsd
            ">

    <bean id="randomAnswerModule"  class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="и+го+рь,.*\?"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.RandomAnswer">
                <property name="answers">
                    <map>
                        <entry key="Да" value="4"/>
                        <entry key="Ага" value="2"/>
                        <entry key="+" value="1"/>
                        <entry key="Нет" value="6"/>
                        <entry key="-" value="1"/>
                        <entry key="Не знаю" value="2"/>
                        <entry key="хз" value="1"/>
                    </map>
                </property>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="choiceMaker" class="ru.javazen.telegram.bot.handler.ChoiceMaker">
        <property name="pattern" value="и+го+рь,\s*(?&lt;options&gt;.+\s+или\s+.+)\?"/>
        <property name="comparator" ref="randomComparator"/>
        <property name="splitPattern" value="\s*(,|или)\s*"/>
    </bean>

    <bean id="rusCharSet" class="java.lang.String">
        <constructor-arg value="йцукенгшщзхъфывапролджэячсмитьбю.ёЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ,Ё&quot;№;%:?"/>
    </bean>

    <bean id="engCharSet" class="java.lang.String">
        <constructor-arg value="qwertyuiop[]asdfghjkl;'zxcvbnm,./`QWERTYUIOP{}ASDFGHJKL:&quot;ZXCVBNM&lt;&gt;?~@#$%^&amp;"
        />
    </bean>

    <bean id="replyLayoutSwitcherModuleRus" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="(п[оа][- ]?р[ую][сз][сз]?[кг][ие].*|ru.*)"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.ReplyLayoutSwitcher">
                <property name="sourceCharSet" ref="engCharSet"/>
                <property name="targetChatSet" ref="rusCharSet"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="replyLayoutSwitcherModuleEng" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="([иае]нгл.*|eng.*)"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.ReplyLayoutSwitcher">
                <property name="sourceCharSet" ref="rusCharSet"/>
                <property name="targetChatSet" ref="engCharSet"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="lowLevelJokesModule1" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="[^?a-zа-я]*[нhn][еe][тt][^?a-zа-я]*"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleAnswer">
                <constructor-arg name="answer" value="Пидора ответ!"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="lowLevelJokesModule2" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value=".*([3з][0oо][0oо]|[тt][рp][иu][сc][тt][aаоo0])"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleAnswer">
                <constructor-arg name="answer" value="Отсоси у тракториста!"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="repeaterAdvanced" class="ru.javazen.telegram.bot.handler.RepeaterAdvanced">
        <property name="pattern" value="и+го+рь,\s?ск[ао]ж[иы] (.+)"/>
    </bean>

    <bean id="updateInfoProvider" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="/info(| .*)"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.UpdateInfoProvider"/>
        </constructor-arg>
    </bean>

    <bean id="forwardMessageBridge" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RegexpFilter">
                <property name="pattern" value="/forward_to (.+)"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.MessageForwardBridge"/>
        </constructor-arg>
    </bean>

    <bean id="chatBridgeWithDenis" class="ru.javazen.telegram.bot.handler.ChatBridge">
        <!--Chat with normal people-->
        <property name="firstChat" value="-1001045629601" />
        <!--Chat with Denis-->
        <property name="secondChat" value="-1001038770422" />
    </bean>

    <bean id="getStickerByIdModule" class="ru.javazen.telegram.bot.handler.GetStickerById">
        <property name="pattern" value="/sticker (.+)"/>
    </bean>

    <bean id="randomFacePalmModule" class="ru.javazen.telegram.bot.handler.FilterAdapter">
        <constructor-arg name="filter">
            <bean class="ru.javazen.telegram.bot.filter.RandomFilter">
                <property name="probability" value="0.01"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="handler">
            <bean class="ru.javazen.telegram.bot.handler.SimpleStickerSender">
                <!-- Face palm by Denis Zaichenko -->
                <property name="sticker" value="BQADAgADVwADYI4MB8LNksbDCpV9Ag"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="pinnedForwarder" class="ru.javazen.telegram.bot.handler.PinnedForwarder">
        <property name="storeChatId" value="-1001066106029"/>
    </bean>

    <bean id="scheduler" class="ru.javazen.telegram.bot.handler.SchedulerNotifyHandler">
        <property name="validationPattern" value="и+го+рь,\s?ск[ао]ж[иы] че?р[еи]?з (.+)"/>
        <property name="daysLimit" value="500"/>
        <property name="tasksLimit" value="30"/>
    </bean>

    <util:map id="botMap" key-type="java.lang.String" value-type="ru.javazen.telegram.bot.Bot">

        <entry key="${bot.name}">
            <bean class="ru.javazen.telegram.bot.CompositeBot">
                <constructor-arg name="token" value="${bot.token}"/>
                <property name="updateHandlers">
                    <list>
                        <ref bean="pinnedForwarder"/>
                        <ref bean="scheduler"/>
                        <ref bean="updateInfoProvider"/>
                        <ref bean="replyLayoutSwitcherModuleRus"/>
                        <ref bean="replyLayoutSwitcherModuleEng"/>
                        <ref bean="repeaterAdvanced"/>
                        <ref bean="forwardMessageBridge"/>
                        <ref bean="choiceMaker"/>
                        <ref bean="randomAnswerModule"/>
                        <ref bean="getStickerByIdModule"/>
                        <!--<ref bean="randomFacePalmModule"/>-->
                        <!--<ref bean="lowLevelJokesModule1"/>-->
                        <!--<ref bean="lowLevelJokesModule2"/>-->
                    </list>
                </property>
            </bean>
        </entry>

    </util:map>

</beans>